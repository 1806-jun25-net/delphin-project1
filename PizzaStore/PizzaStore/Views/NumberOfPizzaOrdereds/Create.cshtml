@model PizzaStore.Models.NumberOfPizzaOrdered

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>NumberOfPizzaOrdered</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza1, "Pizza1", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza1", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza2, "Pizza2", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza2", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza3, "Pizza3", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza3", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza4, "Pizza4", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza4", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza5, "Pizza5", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza5", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza6, "Pizza6", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza6", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza7, "Pizza7", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza7", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza7, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza8, "Pizza8", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza8", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza8, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza9, "Pizza9", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza9", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza9, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza10, "Pizza10", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza10", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza10, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza11, "Pizza11", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza11", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza11, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pizza12, "Pizza12", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Pizza12", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pizza12, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
